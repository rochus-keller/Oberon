name: Build ObxIDE (Windows)

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build-windows:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            arch: x64
            output_suffix: win64

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Setup Visual Studio environment
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch == 'x86' && 'x86' || 'x64' }}
        
    - name: Checkout Oberon repository
      uses: actions/checkout@v4
        
    - name: Clean workspace
      run: |
        $directories = @("BUSY", "PeLib", "MonoTools", "GuiTools", "LeanQt")
        foreach ($dir in $directories) {
          if (Test-Path $dir) {
            Remove-Item $dir -Recurse -Force
          }
        }
      shell: powershell
        
    - name: Download and build BUSY
      run: |
        Invoke-WebRequest -Uri "https://github.com/rochus-keller/BUSY/archive/refs/heads/main.zip" -OutFile "busy.zip"
        Expand-Archive -Path "busy.zip" -DestinationPath "."
        Move-Item -Path "BUSY-main" -Destination "BUSY" -Force
        
        Set-Location BUSY
        cl /O2 /MD /Fe:lua.exe *.c
      shell: powershell
      
    - name: Download required dependencies
      run: |
        # Download PeLib
        Invoke-WebRequest -Uri "https://github.com/rochus-keller/PeLib/archive/refs/heads/OBX.zip" -OutFile "pelib.zip"
        Expand-Archive -Path "pelib.zip" -DestinationPath "."
        if (Test-Path "PeLib") { Remove-Item "PeLib" -Recurse -Force }
        Move-Item -Path "PeLib-OBX" -Destination "PeLib" -Force
        
        # Download MonoTools
        Invoke-WebRequest -Uri "https://github.com/rochus-keller/MonoTools/archive/refs/heads/master.zip" -OutFile "monotools.zip"
        Expand-Archive -Path "monotools.zip" -DestinationPath "."
        if (Test-Path "MonoTools") { Remove-Item "MonoTools" -Recurse -Force }
        Move-Item -Path "MonoTools-master" -Destination "MonoTools" -Force
        
        # Download GuiTools
        Invoke-WebRequest -Uri "https://github.com/rochus-keller/GuiTools/archive/refs/heads/master.zip" -OutFile "guitools.zip"
        Expand-Archive -Path "guitools.zip" -DestinationPath "."
        if (Test-Path "GuiTools") { Remove-Item "GuiTools" -Recurse -Force }
        Move-Item -Path "GuiTools-master" -Destination "GuiTools" -Force
        
        # Download LeanQt
        Invoke-WebRequest -Uri "https://github.com/rochus-keller/LeanQt/archive/refs/heads/main.zip" -OutFile "leanqt.zip"
        Expand-Archive -Path "leanqt.zip" -DestinationPath "."
        if (Test-Path "LeanQt") { Remove-Item "LeanQt" -Recurse -Force }
        Move-Item -Path "LeanQt-main" -Destination "LeanQt" -Force
      shell: powershell
      
    - name: Debug directory structure
      run: |
        Write-Host "=== Current directory structure ==="
        Get-ChildItem -Name
        Write-Host ""
        Write-Host "=== Contents of current directory ==="
        Get-ChildItem | Format-Table Name, Length, LastWriteTime
        Write-Host ""
        Write-Host "=== Looking for BUSY file in root ==="
        if (Test-Path "BUSY") {
          Write-Host "Found BUSY file/directory in root"
          Get-Item "BUSY"
        } else {
          Write-Host "No BUSY file found in root"
        }
        Write-Host ""
        Write-Host "=== Current working directory ==="
        Get-Location
      shell: powershell
      
    - name: Build ObxIDE
      run: |
        Set-Location BUSY
        Write-Host "=== Building from BUSY directory ==="
        Write-Host "Current directory: $(Get-Location)"
        Write-Host "Parent directory contents:"
        Get-ChildItem .. | Format-Table Name, Length, LastWriteTime
        
        # Use absolute path to avoid any path conversion issues
        $oberonPath = Resolve-Path ".."
        Write-Host "Resolved Oberon path: $oberonPath"
        
        .\lua.exe build.lua "$oberonPath" -T ide
      shell: powershell
      
    - name: Package artifacts
      run: |
        Set-Location BUSY\output
        New-Item -ItemType Directory -Path "..\..\artifacts" -Force
        
        if (Test-Path "ObxIDE.exe") {
          Copy-Item "ObxIDE.exe" "..\..\artifacts\ObxIDE_${{ matrix.output_suffix }}.exe"
        }
        
        if (Test-Path "mono") {
          Copy-Item "mono" "..\..\artifacts\" -Recurse
        }
      shell: powershell
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ObxIDE_${{ matrix.output_suffix }}
        path: artifacts/
        retention-days: 30

